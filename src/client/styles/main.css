@import url("https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Prompt:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

:root {
    --topBannerHeight: 60px;
    --tealColor: #058484;
    --brownColor: rgb(119, 78, 3);
    --redColor: rgb(158, 2, 2);
}

*,
*::before,
*::after {
    box-sizing: border-box;
    backface-visibility: hidden;
}

ul {
    padding: 0;
    margin: 0;
    list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: "Ubuntu";
    margin: 0;
}

.button {
    transition: transform 100ms linear;
}

.button:active {
    transform: translate(0, 2px);
}

body {
    font-family: "Roboto";
    color: var(--fontColor);
    background-color: var(--backgroundColor);
    padding: 0;
    margin: 0;
    position: relative;
    overflow: hidden auto;
    --headerHeight: 60px;
}

body.light-theme {
    --fontColor: rgba(0, 0, 0, 1);
    --fontColor-2: rgba(0, 0, 0, 0.8);
    --fontColor-3: rgba(0, 0, 0, 0.6);
    --backgroundColor: rgba(255, 255, 255, 1);
    --backgroundColor-2: rgba(0, 0, 0, 0.05);
    --headerBorderColor: rgba(0, 0, 0, 0.2);
    --floatingBackgroundColor: rgba(255, 255, 255, 1);
    --searchResultItemBackgroundColor: rgba(0, 0, 0, 0.1);
    --searchResultItemHoverBackgroundColor: rgba(0, 0, 0, 0.2);
}

body.dark-theme {
    --fontColor: rgba(255, 255, 255, 1);
    --fontColor-2: rgba(255, 255, 255, 0.6);
    --fontColor-3: rgba(255, 255, 255, 0.8);
    --backgroundColor: rgba(30, 31, 34, 1);
    --backgroundColor-2: rgba(49, 51, 56, 0.3);
    --headerBorderColor: rgba(255, 255, 255, 0.2);
    --floatingBackgroundColor: rgba(43, 45, 49, 1);
    --searchResultItemBackgroundColor: rgba(255, 255, 255, 0.1);
    --searchResultItemHoverBackgroundColor: rgba(255, 255, 255, 0.2);
}

#app {
    width: 100%;
    height: 100%;
    position: relative;
}

.app-header {
    width: 100%;
    height: var(--headerHeight);
    border-bottom: 1px solid var(--headerBorderColor);
    position: sticky;
    inset: 0 auto auto 0;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: space-between;
    gap: 10px;
    backdrop-filter: blur(50px);
    z-index: 999;
    --padding: 15px;

}

.initial-header {
    background-color: white;
}

.app-header .icon {
    width: 30px;
    height: 30px;
    display: block;
}

.app-header .icon svg {
    width: 100%;
    height: 100%;
}

.app-header .logoContainer {
    width: 150px;
    height: 100%;
    margin: 0 0 0 var(--padding);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 10px;
}

.app-header .logoContainer>* {
    cursor: pointer;
}

.app-header .logoContainer svg {
    color: var(--tealColor);
}

.app-header .logoContainer .icon {
    width: 40px;
    height: 40px;
}

.app-header .app-name {
    color: var(--tealColor);
    font-family: "Ubuntu";
    font-size: 25px;
    letter-spacing: -2px;
}

.app-header .app-name span {
    user-select: none;
    transition: opacity 100ms linear;
}

.app-header .app-name span:last-child {
    opacity: 0.5;
}

.app-header .app-name:hover span:first-child {
    opacity: 0.5;
}

.app-header .app-name:hover span:last-child {
    opacity: 1;
}

.app-header .rightSide {
    margin: 0 20px 0 0;
    display: flex;
    flex-flow: row;
    gap: 10px;
}

.app-header .searchComponent {
    width: 250px;
    height: 30px;
    border-radius: 5px;
    position: relative;
    overflow: hidden;
    z-index: 1;
    --searchColor: var(--tealColor);
}

.app-header .searchComponent:not(.withoutResults) {
    border-radius: 5px 5px 0 0;
}

.app-header .searchComponent:before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: var(--searchColor);
    position: absolute;
    inset: 0 0 auto auto;
    z-index: -1;
    opacity: 0.1;
    transition: opacity 100ms linear;
}

.app-header .searchComponent:is(:focus-within):before,
.app-header .searchComponent:has(> #searchInput:not(:placeholder-shown)):before {
    opacity: 0.3;
}

.app-header .search-icon {
    width: 25px;
    height: 100%;
    color: var(--searchColor);
    position: absolute;
    inset: 50% auto auto 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    transform: translate(0, -50%);
    transition: color 100ms linear;
    overflow: hidden;
}

.app-header .searchComponent:not(.withoutResults) .search-icon {
    cursor: pointer;
}

.app-header .search-icon svg {
    width: 70%;
    height: 70%;
}

.app-header #searchInput {
    width: calc(100% - 25px);
    height: 30px;
    color: var(--fontColor);
    font-family: "Ubuntu";
    font-size: 16px;
    font-weight: 500;
    background-color: transparent;
    border: none;
    padding: 5px;
    margin: 0 0 0 25px;
    position: relative;
    outline: none;
    z-index: 1;
    appearance: none;
}

.app-header .searchComponent:is(:focus-within) #searchInput::placeholder {
    color: var(--fontColor);
}

.app-header #searchInput::placeholder {
    font-weight: 500;
    user-select: none;
}

.app-header .user-account {
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.app-header .user-account .icon {
    width: 25px;
    height: 25px;
    color: var(--tealColor);
    position: relative;
    pointer-events: none;
    z-index: 1;
}

.app-header .user-account .icon:before {
    content: "";
    width: calc(100% + 16px);
    height: calc(100% + 16px);
    background-color: var(--tealColor);
    border-radius: 50%;
    position: absolute;
    inset: -8px auto auto -8px;
    transform: scale(0);
    z-index: -1;
    transition: transform 150ms linear;
}

.app-header .user-account.open .icon {
    color: #fff;
}

.app-header .user-account.open .icon:before {
    transform: scale(1);
}

.app-header .user-account svg {
    transition: color 100ms linear;
}

/* Search Results */
.searchResults {
    height: auto;
    background-color: var(--backgroundColor);
    border-radius: 0 0 5px 5px;
    position: fixed;
    display: flex;
    flex-flow: column;
    overflow: hidden;
    z-index: 1001;
}

.searchResults .searchResultsInner {
    width: 100%;
    height: 100%;
    padding: 10px;
    position: relative;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 5px;
    z-index: -1;
}

.searchResults .searchResultsInner:before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: var(--tealColor);
    position: absolute;
    inset: 0 0 auto auto;
    opacity: 0.3;
    z-index: -1;
}

.searchResults span:where(.searchingPlaceholder, .resultMessage) {
    width: 100%;
    color: var(--fontColor-2);
    font-size: 14px;
    font-weight: 600;
    text-align: center;
    text-transform: uppercase;
    padding: 10px;
    user-select: none;
}

.searchResults .searchResultItem {
    width: 100%;
    color: var(--fontColor-2);
    font-size: 14px;
    background-color: var(--searchResultItemBackgroundColor);
    border-radius: 5px;
    padding: 10px;
    display: flex;
    flex-flow: column;
    gap: 5px;
    cursor: pointer;
    transition: background-color 100ms linear;
    user-select: none;
}

.searchResults .searchResultItem:hover {
    background-color: var(--searchResultItemHoverBackgroundColor);
}

.searchResults .searchResultItem .itemRow {
    display: flex;
    flex-flow: row;
    gap: 5px;
}

.searchResults .itemRow span:first-child {
    color: var(--fontColor-3);
    font-weight: 600;
}

.containerWrapper {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    flex-flow: row;
    align-items: flex-start;
    justify-content: flex-start;
    overflow: hidden;
}

.containerWrapper>div {
    flex: 1;
    position: relative;
}

.sidebarWrapper {
    width: var(--wrapperWidth);
    min-width: var(--wrapperWidth);
    max-width: var(--wrapperWidth);
    height: 100%;
    position: fixed !important;
    z-index: 9;
    --wrapperWidth: fit-content;
}

.sidebar {
    width: max-content;
    min-width: max-content;
    max-width: max-content;
    height: 100%;
    padding: 30px 20px 10px 20px;
    position: relative;
    inset: 0 auto auto 0;
}

.sidebar .logo {
    width: 50px;
    height: 50px;
    position: relative;
    inset: 0 auto auto 50%;
    transform: translate(-50%, 0);
}

.sidebar .sidebar-links {
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 30px;
}

.sidebar .link-item {
    --activeColor: orange;
    font-family: "Ubuntu", sans-serif;
    font-size: 18px;
    font-weight: 500;
    display: flex;
    flex-flow: row;
    gap: 20px;
    cursor: pointer;
    user-select: none;
}

.sidebar .link-item.link-active {
    color: var(--activeColor);
}

.sidebar .link-item#new {
    --activeColor: teal;
}

.sidebar .link-item .link-icon {
    width: 25px;
    height: 25px;
    position: relative;
    display: block;
    z-index: 1;
}

.sidebar .link-item .link-icon:before {
    content: "";
    width: calc(100% + 18px);
    height: calc(100% + 18px);
    background-color: var(--activeColor);
    border-radius: 50%;
    position: absolute;
    inset: -9px auto auto -9px;
    z-index: -1;
    pointer-events: none;
    opacity: 0;
    transform: scale(0);
    transition:
        opacity 100ms linear,
        transform 150ms linear;
}

.sidebar .link-item:hover .link-icon:before,
.sidebar .link-item.link-active .link-icon:before {
    transform: scale(1);
}

.sidebar .link-item:hover .link-icon:before {
    opacity: 0.2;
}

.sidebar .link-item.link-active .link-icon:before {
    opacity: 0.6;
}

.sidebar .link-item svg {
    width: 100%;
    height: 100%;
}

.sidebar .link-item.link-active svg {
    color: black;
}

.sidebar .link-item .link-title {
    position: relative;
}

@media screen and (max-width: 800px) {
    .sidebar .link-item .link-title {
        display: none;
    }
}

.contentWrapper {
    --contentWidth: calc(100% - var(--sidebarWidth));
    min-width: var(--contentWidth);
    max-width: var(--contentWidth);
    padding: 25px 20px 25px 20px;
    margin: 0 0 0 var(--sidebarWidth);
    z-index: 2;
}

@media screen and (max-width: 800px) {
    .contentWrapper {
        padding: 25px 20px 25px 0;
    }
}

.contentWrapper .content {
    width: 100%;
    height: fit-content;
}

.contentWrapper .contentTab {}

.contentWrapper .contentTab .noResult-content {
    height: 500px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.contentWrapper .contentTab .eventList {

    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: var(--gapSpacing);
    --gapSpacing: 10px;
}

.contentWrapper .eventList>div {
    width: 100%;
    display: flex;
    flex-flow: column;
    gap: 20px;
}

.primary {
    width: 100%;
}

.primaryEventContainer {
    width: 100%;
    margin-bottom: 20px;
    overflow: hidden;
}

.primaryEvent {
    width: 100%;
    display: flex;
    flex-flow: row wrap;
    align-items: flex-start;
    justify-content: center;
}

@media screen and (max-width: 800px) {
    .currentTab .primaryEvent {
        flex-flow: column;
        align-items: center;
        justify-content: center;
    }
}

.primaryEvent>div {
    height: fit-content;
    flex: 1;
}

.primaryEvent .left {
    --dimension: 400px;
    width: var(--dimension);
    min-width: var(--dimension);
    max-width: var(--dimension);
    height: var(--dimension);
    min-height: var(--dimension);
    max-height: var(--dimension);
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 10px 0 0 10px;
    display: block;
    overflow: hidden;
}

.primaryEvent .left .leaflet-control {
    display: none;
}

@media screen and (max-width: 800px) {
    .primaryEvent .left {
        min-width: 100%;
        max-width: initial;
        border-radius: 10px 10px 0 0;
    }
}

.primaryContainer.eventPage #map {
    flex-flow: column;
}

.primaryEvent .right {
    min-height: 400px;
    max-height: 400px;
    border-radius: 0 10px 10px 0;
    padding: 20px;
    position: relative;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    overflow-x: hidden;
    overflow-y: auto;
}

.primaryEvent:has(.right) .right {
    background-color: var(--backgroundColor-2);
}

@media screen and (max-width: 800px) {

    .primaryEvent .right {
        min-height: auto;
        max-height: initial;
        border-radius: 0 0 10px 10px;
    }
}

#map .row {
    display: flex;
    flex-flow: row;
    gap: 10px;
}

.primaryEvent .right h2 {
    margin-bottom: 15px;
}

.primaryEvent .icon {
    min-width: 20px;
    max-width: 20px;
    height: 20px;
    position: relative;
}

.primary .icon svg {
    width: 90%;
    height: 90%;
}

.primaryEvent div:where(.right, .below) .row {
    display: flex;
    flex-flow: row;
    align-items: center;
    gap: 15px;
}

.primaryEvent .right .row {
    margin-bottom: 15px;
}

.primaryEvent div:where(.right, .below) .row.dateComponent .info {
    display: flex;
    gap: 10px;
}

.primaryEvent #user .info>div {
    display: flex;
    flex-flow: row wrap;
    gap: 5px;
}

.primaryEvent .invitesComponent .info {
    display: flex;
    flex-flow: row wrap;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 10px;
}

.primaryEvent div:where(.right, .below) .buttonContainer {
    width: 100%;
    margin: 15px 0 0 0;
    position: relative;
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: flex-start;
    gap: 10px;
}

.primaryEvent div:where(.right, .below) .buttonContainer .button {
    height: 30px;
    color: #fff;
    font-family: "Roboto";
    font-size: 14px;
    font-weight: 500;
    text-transform: uppercase;
    border-radius: 5px;
    padding: 6px 10px;
    position: relative;
    cursor: pointer;
    overflow: hidden;
    z-index: 1;
    user-select: none;
}

.primaryEvent div:where(.right, .below) .buttonContainer .button:before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0 0 auto auto;
    opacity: 0.6;
    z-index: -1;
    transition: opacity 100ms linear;
}

.primaryEvent div:where(.right, .below) .buttonContainer .button:hover:before {
    opacity: 0.8;
}

.primaryEvent div:where(.right, .below) .buttonContainer .button.details:before {
    background-color: var(--tealColor);
}

.primaryEvent div:where(.right, .below) .buttonContainer .button.edit:before {
    background-color: var(--brownColor);
}

.primaryEvent div:where(.right, .below) .buttonContainer .button.delete:before {
    background-color: var(--redColor);
}

.primaryEvent .invite-item {
    border: 1px solid var(--borderLineColor);
    border-radius: 5px;
    padding: 5px 8px;
    transition: background-color 100ms linear;
    cursor: pointer;
}

body.light-theme .primaryEvent .invite-item {
    --backgroundColorHover: rgba(0, 0, 0, 0.05);
    --borderLineColor: rgba(0, 0, 0, 0.3);
}

body.dark-theme .primaryEvent .invite-item {
    --backgroundColorHover: rgba(255, 255, 255, 0.05);
    --borderLineColor: rgba(255, 255, 255, 0.3);
}

.primaryEvent .invite-item:hover {
    background-color: var(--backgroundColorHover);
}

.currentTab .grid-list {
    width: 100%;
    padding: 20px 0;
}

.currentTab .event-cards {
    width: 100%;
    height: 100%;
    position: relative;
}

.event-cards {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    gap: 50px;
}

.event-cards .grid-item {
    position: relative;
}

.event-cards .grid-item.default {
    width: 280px;
    height: 280px;
    border-radius: 10px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    --topDivide: 50%;
}

.event-cards .grid-item>div {
    position: absolute;
}

.event-cards .grid-item .top {
    width: 100%;
    height: var(--topDivide);
    background-color: rgba(0, 0, 0, 0.1);
    inset: 0 auto auto 0;
    transition: height 100ms 100ms linear;
    z-index: 1;
}

.event-cards .grid-item .mapView {
    width: 100%;
    height: 100%;
}

.event-cards .grid-item.event-expired .mapView {
    filter: grayscale(100);
}

.event-cards .grid-item .mapView .leaflet-right {
    display: none;
}

.event-cards .grid-item .middle {
    width: 250px;
    height: 35px;
    background-color: var(--floatingBackgroundColor);
    border-radius: 10px 10px 0 0;
    padding: 5px 10px;
    inset: var(--topDivide) auto auto 50%;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
    gap: 10px;
    transform: translate(-50%, calc(var(--topDivide) * -1));
    transition: transform 100ms 100ms linear;
    z-index: 2;
}

.event-cards .grid-item .middle span {
    font-size: 12px;
    font-weight: 700;
    text-align: center;
}

.event-cards .grid-item .middle span.border {
    width: 1px;
    height: 80%;
    background-color: rgba(0, 0, 0, 0.2);
}

.event-cards .grid-item .bottom {
    width: 100%;
    height: calc(100% - var(--topDivide));
    background-color: var(--floatingBackgroundColor);
    box-shadow: 0 -5px 15px rgba(0, 0, 0, 0.15);
    inset: auto auto 0 0;
    z-index: 1;
}

.event-cards .grid-item .bottom .descriptionInner {
    width: 250px;
    height: 100px;
    padding: 15px;
    position: absolute;
    inset: 10px auto auto 50%;
    transform: translate(-50%, 0);
}

.event-cards .grid-item .bottom .address {
    font-size: 14px;
    margin-top: 5px;
}

.event-cards .grid-item .bottom .buttons {
    width: 100%;
    height: 30px;
    position: absolute;
    inset: auto auto 0 0;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
}

.event-cards .grid-item .bottom .button {
    height: 100%;
    color: #fff;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    position: relative;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    overflow: hidden;
    user-select: none;
    z-index: 1;
}

.event-cards .grid-item .bottom .button.edit {
    max-width: 75px;
}

.event-cards .grid-item .bottom .button:before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0 0 auto auto;
    z-index: -1;
    pointer-events: none;
    opacity: 0.6;
    transition: opacity 100ms linear;
}

.event-cards .grid-item .bottom .button:hover:before {
    opacity: 0.8;
}

.event-cards .grid-item .bottom .button.details:before {
    background-color: var(--tealColor);
}

.event-cards .grid-item .bottom .button.edit:before {
    background-color: var(--brownColor);
}

.event-cards .grid-item .bottom .button.delete:before {
    background-color: var(--redColor);
}

#toastContainer {
    position: absolute;
    inset: 0 auto auto 0;
}

#toastContainer .toast {
    padding: 15px 20px;
    background-color: var(--floatingBackgroundColor);
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-flow: row;
    gap: 10px;
    overflow: hidden;
    transition: transform 100ms linear;
    z-index: 10001;
}

#toastContainer .toast .closeButton {
    width: 20px;
    height: 20px;
    position: relative;
    cursor: pointer;
}

#toastContainer .toast .closeButton svg {
    width: 100%;
    height: 100%;
    pointer-events: none;
}

#toastContainer .toast .slider {
    background-color: var(--tealColor);
    position: absolute;
    inset: auto auto 0 0;
    transition: width 100ms linear;
}

#toastContainer .toast-inner {
    height: 20px;
}

#toastContainer .toast-inner>span {
    height: 20px;
    display: block;
}

#modal {
    position: absolute;
    inset: 0 auto auto 0;
}

#modal:empty {
    display: none;
}


.dateTimeComponentRenderer {
    transition: height 100ms linear;
}

.dateTimeComponentRenderer:empty {
    height: 0;
}

.dateTimeComponentRenderer:not(:empty) {
    height: 100%;
}

/* Account Settings Popup */
.account-popup {
    width: 200px;
    height: 140px;
    background-color: var(--floatingBackgroundColor);
    border: 1px solid rgba(0, 0, 0, 0.4);
    border-radius: 5px;
    position: fixed;
    inset: calc(var(--headerHeight) + 10px) 15px auto auto;
    z-index: 999;
    animation: accountPopup 250ms linear forwards;
}

.account-popup-inner {
    width: 100%;
    height: 100%;
    padding: 10px;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 20px;
}

@keyframes accountPopup {
    from {
        opacity: 0;
        transform: translate(0, 10px);
    }

    to {
        opacity: 1;
        transform: none;
    }
}

.account-popup .username-inner {
    display: flex;
    gap: 5px;
    user-select: none;
}

.account-popup .settings-links {
    width: 100%;
    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: center;
    gap: 5px;
}

.account-popup .settings-links span {
    font-weight: 500;
    cursor: pointer;
    user-select: none;
}

.account-popup .settings-links span:hover {
    text-decoration: underline;
}

/* 404 element */
.contentWrapper:has(> .noResults) {
    height: calc(100vh - var(--headerHeight));
}

.content.noResults {
    width: 100%;
    height: 100%;
    display: flex;
}

.content.noResults .noResultsContainer {
    width: 100%;
    height: 100%;
    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: flex-start;
}

.content.noResults .noResultsContainerText {
    color: var(--tealColor);
    font-family: "Prompt", sans-serif;
    font-size: 30px;
    font-style: normal;
    font-weight: 500;
    text-align: center;
    padding: 10px 20px;
    margin: 10px 0;
    user-select: none;
}

.content.noResults .noResultsContainerIcon {
    width: 350px;
    height: 350px;
    background-image: url("../images/404.jpg");
    background-repeat: no-repeat;
    background-position: top center;
    background-size: 350px 350px;
}

/* Leaflet */
.leaflet-marker-icon.leaflet-interactive {
    pointer-events: none !important;
}

/* Landing Page */
.landing-page.centered-container {
    background-size: cover;
    background-position: center;
    position: relative;
    width: 100%;
    height: 100vh;
    transition: background-image 2000ms ease-in-out;
}

.landing-page .sign-up-button {
    width: 120px;
    background-color: #058484;
    transition: background-color 100ms linear;
}

.landing-page .sign-up-button:hover {
    background-color: #069c9c;
}

.landing-page .event-form {
    width: 100%;
    max-width: 900px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    padding: 20px;
    position: absolute;
    background-color: rgba(0, 132, 132, 0.5);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    gap: 10px;
    backdrop-filter: blur(50px);
}

@media (max-width: 980px) {
    .landing-page .event-form {
        max-width: calc(100% - 40px);
    }
}

.landing-page .event-form input,
.landing-page .event-form button {
    width: auto;
    /* Adjust width as needed, or remove the width property to allow natural sizing */
    padding: 10px;
    /* Add more padding inside the fields and button */
    margin: 0;
    /* Adjust margin as needed */
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 1rem;

    grid-column: span 1;
}

.landing-page .event-form button {
    color: #979393;
    font-weight: 500;
    font-size: 16px;
    text-align: center;
    background: rgb(255, 255, 255);
    border: none;
}

.landing-page .event-form input[type="date"] {
    border-radius: 5px;
    /* Adjust the pixel value to get the desired roundness */
    color: #979393;
}

.landing-page .event-form input[name="eventName"] {
    width: 150px;
}

.landing-page .event-form input[name="location"] {
    width: 150px;
}

.landing-page button {
    width: 100%;
    padding: 10px;
    background-color: #0275d8;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}