@import url("https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

:root {
    --tealColor: #058484;
}

*,
*::before,
*::after {
    box-sizing: border-box;
    backface-visibility: hidden;
}

ul {
    padding: 0;
    margin: 0;
    list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: "Ubuntu";
    margin: 0;
}

.button {
    transition: transform 100ms linear;
}

.button:active {
    transform: translate(0, 2px);
}

body {
    font-family: "Roboto";
    padding: 0;
    margin: 0;
    position: relative;
    overflow: hidden auto;
    --headerHeight: 60px;
}

#app {
    width: 100%;
    height: 100%;
    position: relative;
}

.app-header {
    width: 100%;
    height: var(--headerHeight);
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    position: sticky;
    inset: 0 auto auto 0;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: space-between;
    gap: 10px;
    backdrop-filter: blur(50px);
    z-index: 999;
    --padding: 15px;
}

.app-header .icon {
    width: 30px;
    height: 30px;
    display: block;
}

.app-header .icon svg {
    width: 100%;
    height: 100%;
}

.app-header .logoContainer {
    width: 150px;
    height: 100%;
    margin: 0 0 0 var(--padding);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 10px;
}

.app-header .logoContainer>* {
    cursor: pointer;
}

.app-header .logoContainer svg {
    color: var(--tealColor);
}

.app-header .logoContainer .icon {
    width: 40px;
    height: 40px;
}

.app-header .app-name {
    color: var(--tealColor);
    font-family: "Ubuntu";
    font-size: 25px;
    letter-spacing: -2px;
}

.app-header .app-name span {
    user-select: none;
    transition: opacity 100ms linear;
}

.app-header .app-name span:last-child {
    opacity: 0.5;
}

.app-header .app-name:hover span:first-child {
    opacity: 0.5;
}

.app-header .app-name:hover span:last-child {
    opacity: 1;
}

.app-header .rightSide {
    margin: 0 20px 0 0;
    display: flex;
    flex-flow: row;
    gap: 10px;
}

.app-header .searchComponent {
    width: 250px;
    height: 30px;
    border-radius: 5px;
    position: relative;
    overflow: hidden;
    z-index: 1;
    --searchColor: var(--tealColor);
}

.app-header .searchComponent:before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: var(--searchColor);
    position: absolute;
    inset: 0 0 auto auto;
    z-index: -1;
    opacity: 0.1;
    transition: opacity 100ms linear;
}

.app-header .searchComponent:is(:focus-within):before,
.app-header .searchComponent:has(> #searchInput:not(:placeholder-shown)):before {
    opacity: 0.3;
}

.app-header .search-icon {
    width: 25px;
    height: 100%;
    color: var(--searchColor);
    position: absolute;
    inset: 50% auto auto 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transform: translate(0, -50%);
    transition: color 100ms linear;
    overflow: hidden;
}

.app-header .search-icon svg {
    width: 70%;
    height: 70%;
}

.app-header #searchInput {
    width: calc(100% - 25px);
    height: 30px;
    font-family: "Ubuntu";
    font-size: 16px;
    background-color: transparent;
    border: none;
    padding: 5px;
    margin: 0 0 0 25px;
    position: relative;
    outline: none;
    z-index: 1;
    appearance: none;
}

.app-header #searchInput::placeholder {
    user-select: none;
}

.app-header .user-account {
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.app-header .user-account .icon {
    width: 25px;
    height: 25px;
    color: var(--tealColor);
    position: relative;
    pointer-events: none;
    z-index: 1;
}

.app-header .user-account .icon:before {
    content: "";
    width: calc(100% + 16px);
    height: calc(100% + 16px);
    background-color: var(--tealColor);
    border-radius: 50%;
    position: absolute;
    inset: -8px auto auto -8px;
    transform: scale(0);
    z-index: -1;
    transition: transform 150ms linear;
}

.app-header .user-account.open .icon {
    color: #fff;
}

.app-header .user-account.open .icon:before {
    transform: scale(1);
}

.app-header .user-account svg {
    transition: color 100ms linear;
}

.containerWrapper {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    flex-flow: row;
    align-items: flex-start;
    justify-content: flex-start;
    overflow: hidden;
}

.containerWrapper>div {
    flex: 1;
    position: relative;
}

.sidebarWrapper {
    width: var(--wrapperWidth);
    min-width: var(--wrapperWidth);
    max-width: var(--wrapperWidth);
    height: 100%;
    position: fixed !important;
    z-index: 9;
    --wrapperWidth: fit-content;
}

.sidebar {
    width: max-content;
    min-width: max-content;
    max-width: max-content;
    height: 100%;
    padding: 30px 20px 10px 20px;
    position: relative;
    inset: 0 auto auto 0;
}

.sidebar .logo {
    width: 50px;
    height: 50px;
    position: relative;
    inset: 0 auto auto 50%;
    transform: translate(-50%, 0);
}

.sidebar .sidebar-links {
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 30px;
}

.sidebar .link-item {
    --activeColor: orange;
    font-family: "Ubuntu", sans-serif;
    font-size: 18px;
    font-weight: 500;
    display: flex;
    flex-flow: row;
    gap: 20px;
    cursor: pointer;
    user-select: none;
}

.sidebar .link-item.link-active {
    color: var(--activeColor);
}

.sidebar .link-item#new {
    --activeColor: teal;
}

.sidebar .link-item .link-icon {
    width: 25px;
    height: 25px;
    position: relative;
    display: block;
    z-index: 1;
}

.sidebar .link-item .link-icon:before {
    content: "";
    width: calc(100% + 18px);
    height: calc(100% + 18px);
    background-color: var(--activeColor);
    border-radius: 50%;
    position: absolute;
    inset: -9px auto auto -9px;
    z-index: -1;
    pointer-events: none;
    opacity: 0;
    transform: scale(0);
    transition:
        opacity 100ms linear,
        transform 150ms linear;
}

.sidebar .link-item:hover .link-icon:before,
.sidebar .link-item.link-active .link-icon:before {
    transform: scale(1);
}

.sidebar .link-item:hover .link-icon:before {
    opacity: 0.2;
}

.sidebar .link-item.link-active .link-icon:before {
    opacity: 0.6;
}

.sidebar .link-item svg {
    width: 100%;
    height: 100%;
}

.sidebar .link-item.link-active svg {
    color: black;
}

.sidebar .link-item .link-title {
    position: relative;
}

@media screen and (max-width: 800px) {
    .sidebar .link-item .link-title {
        display: none;
    }
}

.contentWrapper {
    --contentWidth: calc(100% - var(--sidebarWidth));
    min-width: var(--contentWidth);
    max-width: var(--contentWidth);
    padding: 25px 20px 25px 20px;
    margin: 0 0 0 var(--sidebarWidth);
    z-index: 2;
}

@media screen and (max-width: 800px) {
    .contentWrapper {
        padding: 25px 20px 25px 0;
    }
}

.contentWrapper .content {
    width: 100%;
    height: fit-content;
}

.contentWrapper .contentTab {
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: var(--gapSpacing);
    --gapSpacing: 10px;
}

.contentWrapper .currentTab>div {
    width: 100%;
    display: flex;
    flex-flow: column;
    gap: 20px;
}

.primary {
    width: 100%;
}

.primaryEventContainer {
    width: 100%;
    margin-bottom: 20px;
    overflow: hidden;
}

.primaryEvent {
    width: 100%;
    display: flex;
    flex-flow: row wrap;
    align-items: flex-start;
    justify-content: center;
}

@media screen and (max-width: 800px) {
    .currentTab .primaryEvent {
        flex-flow: column;
        align-items: center;
        justify-content: center;
    }
}

.primaryEvent>div {
    height: fit-content;
    flex: 1;
}

.primaryEvent .left {
    --dimension: 400px;
    width: var(--dimension);
    min-width: var(--dimension);
    max-width: var(--dimension);
    height: var(--dimension);
    min-height: var(--dimension);
    max-height: var(--dimension);
    background-color: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    display: block;
    overflow: hidden;
}

.primaryEvent .left .leaflet-control {
    display: none;
}

@media screen and (max-width: 800px) {
    .primaryEvent .left {
        --dimension: 335px;
    }
}

.primaryEvent .right {
    min-height: 100%;
    margin: 0 20px;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
}

@media screen and (max-width: 800px) {
    .primaryEvent .right {
        margin: 20px 0;
    }
}

.primaryEvent .right h2 {
    margin-bottom: 15px;
}

.primaryEvent .icon {
    min-width: 20px;
    max-width: 20px;
    height: 20px;
    position: relative;
}

.primary .icon svg {
    width: 100%;
    height: 100%;
}

.primaryEvent .right .row {
    margin-bottom: 15px;
    display: flex;
    flex-flow: row;
    gap: 15px;
}

.primaryEvent .invitesComponent .info {
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 10px;
}

.currentTab .primaryEvent .invite-item {
    border: 1px solid rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    padding: 5px 8px;
    transition: background-color 100ms linear;
    cursor: pointer;
}

.currentTab .primaryEvent .invite-item:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.currentTab .primaryEvent svg {
    width: 100%;
    height: 100%;
}

.currentTab .grid-list {
    width: 100%;
    padding: 20px 0;
}

.currentTab .event-cards {
    width: 100%;
    height: 100%;
    position: relative;
}

.event-cards {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    gap: 50px;
}

.event-cards .grid-item {
    position: relative;
}

.event-cards .grid-item.default {
    width: 280px;
    height: 280px;
    border-radius: 10px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    --topDivide: 50%;
}

.event-cards .grid-item>div {
    position: absolute;
}

.event-cards .grid-item .top {
    width: 100%;
    height: var(--topDivide);
    background-color: rgba(0, 0, 0, 0.1);
    inset: 0 auto auto 0;
    transition: height 100ms 100ms linear;
    z-index: 1;
}

.event-cards .grid-item .mapView {
    width: 100%;
    height: 100%;
}

.event-cards .grid-item.event-expired .mapView {
    filter: grayscale(100);
}

.event-cards .grid-item .mapView .leaflet-right {
    display: none;
}

.event-cards .grid-item .middle {
    width: 250px;
    height: 35px;
    background-color: #fff;
    border-radius: 10px 10px 0 0;
    padding: 5px 10px;
    inset: var(--topDivide) auto auto 50%;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
    gap: 10px;
    transform: translate(-50%, calc(var(--topDivide) * -1));
    transition: transform 100ms 100ms linear;
    z-index: 2;
}

.event-cards .grid-item .middle span {
    font-size: 12px;
    font-weight: 700;
    text-align: center;
}

.event-cards .grid-item .middle span.border {
    width: 1px;
    height: 80%;
    background-color: rgba(0, 0, 0, 0.2);
}

.event-cards .grid-item .bottom {
    width: 100%;
    height: calc(100% - var(--topDivide));
    box-shadow: 0 -5px 15px rgba(0, 0, 0, 0.15);
    inset: auto auto 0 0;
    z-index: 1;
}

.event-cards .grid-item .bottom .descriptionInner {
    width: 250px;
    height: 100px;
    padding: 15px;
    position: absolute;
    inset: 10px auto auto 50%;
    transform: translate(-50%, 0);
}

.event-cards .grid-item .bottom .address {
    font-size: 14px;
    margin-top: 5px;
}

.event-cards .grid-item .bottom .buttons {
    width: 100%;
    height: 30px;
    position: absolute;
    inset: auto auto 0 0;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
}

.event-cards .grid-item .bottom .button {
    height: 100%;
    color: #fff;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: -1px;
    position: relative;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    overflow: hidden;
    user-select: none;
    z-index: 1;
}

.event-cards .grid-item .bottom .button:before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0 0 auto auto;
    z-index: -1;
    pointer-events: none;
    opacity: 0.6;
    transition: opacity 100ms linear;
}

.event-cards .grid-item .bottom .button:hover:before {
    opacity: 0.8;
}

.event-cards .grid-item .bottom .button.details:before {
    background-color: var(--tealColor);
}

.event-cards .grid-item .bottom .button.postpone:before {
    background-color: rgb(119, 78, 3);
}

.event-cards .grid-item .bottom .button.delete:before {
    background-color: rgb(158, 2, 2);
}

#modal {
    position: absolute;
    inset: 0 auto auto 0;
}

#modal:empty {
    display: none;
}

.eventContainer {
    width: 400px;
    height: auto;
    max-height: calc(100% - 100px);
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    display: flex;
    flex-flow: column;
    overflow: hidden;
    z-index: 999;
}

.eventContainerInner {
    --handleHeight: 35px;
    position: relative;
    flex: 1;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    overflow: hidden;
}

.eventContainerHandle {
    width: 100%;
    min-height: var(--handleHeight);
    position: relative;
    background-color: rgba(0, 0, 0, 0.05);
}

.eventContainerHandle.isDragging {
    cursor: grabbing;
}

.eventHandleButtons {
    width: 100px;
    height: 100%;
    position: absolute;
    inset: 0 0 auto auto;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: flex-end;
}

.eventHandleButtons span {
    width: 30px;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 100ms linear;
    cursor: pointer;
}

.eventHandleButtons span:hover {
    background-color: rgba(0, 0, 0, 0.1);
}

.eventHandleButtons span svg {
    width: 60%;
    height: 60%;
}

.eventHandleButtons span#max svg {
    width: 40%;
    height: 40%;
}

.eventContent {
    --height: calc(100% - var(--handleHeight));
    --iconWidth: 20px;
    --iconGap: 20px;
    --rightSidePaddingRight: 20px;
    width: 100%;
    font-family: "Roboto", sans-serif;
    position: relative;
    flex: 1;
    overflow: auto;
}

.eventContent>div {
    width: 100%;
}

.eventContent .wide {
    width: 100%;
    position: relative;
}

.eventContent .wide>div {
    width: 100%;
    height: 30px;
    padding: 0 var(--rightSidePaddingRight) 0 calc((var(--iconGap) * 2) + 30px);
    position: absolute;
    inset: 50% auto auto 0;
    transform: translate(0, -50%);
}

.eventContent .wide .eventInputWrapper {
    background-color: transparent !important;
}

.eventContent .column {
    min-height: 40px;
    border-top: 1px solid transparent;
    border-bottom: 1px solid transparent;
    margin: 5px 0 0 0;
    display: flex;
    flex-flow: row;
    gap: var(--iconGap);
    transition: border-color 100ms linear;
    user-select: none;
}

.eventContent .column.revealed {
    --borderRevealColor: rgba(0, 0, 0, 0.15);
    user-select: text;
}

.eventContent .column.revealed .eventInputWrapper {
    background-color: rgba(0, 0, 0, 0.05);
}

.eventContent .column.revealed .spanBorder {
    background-color: transparent;
}

.eventContent .titleContainer {
    min-height: 60px;
}

.eventContent .column .event-icon {
    width: var(--iconWidth);
    min-width: var(--iconWidth);
    height: var(--iconWidth);
    color: var(--tealColor);
    margin: 10px 0 0 var(--iconGap);
}

.eventContent .event-icon svg {
    width: 100%;
    height: 100%;
}

.eventContent .column .rightSide {
    border-radius: 5px;
    padding: 10px 0 10px 10px;
    margin: 0 var(--rightSidePaddingRight) 0 0;
    flex: 1;
    transition: background-color 100ms linear;
}

.eventContent .column .default span {
    position: relative;
    cursor: pointer;
    pointer-events: auto;
}

.eventContent .column .default span:after {
    content: "";
    width: 100%;
    height: 1px;
    background-color: rgba(0, 0, 0, 0.5);
    position: absolute;
    inset: auto auto -1px 0;
    pointer-events: none;
    transform: scale(0);
    transform-origin: center;
    transition: transform 150ms linear;
}

.eventContent .column .default span:hover:after {
    transform: scale(1);
}

.eventContent .rightSide span {
    color: rgb(95, 99, 104);
    font-size: 14px;
    font-weight: 400;
}

.eventContent .rightSide.default>* {
    user-select: none;
    pointer-events: none;
}

.eventContent #title {
    height: 100%;
    color: rgba(0, 0, 0, 0.6);
    font-size: 24px;
    font-weight: 500;
    padding: 0 !important;
}

.eventContent #title::placeholder {
    color: rgba(0, 0, 0, 0.6);
}

.eventContent .eventInputWrapper {
    position: relative;
    border-radius: 5px;
    transition:
        background-color 100ms linear,
        border-radius 100ms linear;
}

.eventContent .eventInputWrapper:focus-within {
    border-radius: 5px 5px 0 0;
}

.eventContent .eventInputWrapper>*:is(:focus, :not(:placeholder-shown))~.spanBorder:before {
    height: 2px;
    transform: scale(1) translate(-50%, 0);
}

.eventContent .eventInputWrapper>*:is(textarea, input) {
    width: 100%;
    height: 30px;
    font-size: 14px;
    font-family: "Roboto";
    background-color: transparent;
    padding: 5px;
    border: none;
    outline: none;
    appearance: none;
}

.eventContent .eventInputWrapper .spanBorder {
    width: 100%;
    height: 0.5px;
    background-color: gray;
    position: absolute;
    inset: auto 0 0 auto;
    display: block;
    z-index: 1;
}

.eventContent .eventInputWrapper .spanBorder:before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: var(--tealColor);
    position: absolute;
    inset: 0 auto auto 50%;
    transform: scale(0) translate(-50%, 0);
    transform-origin: left;
    pointer-events: none;
    transition: transform 300ms linear;
}

.eventContent #invites {
    position: relative;
}

.eventContent #invites ul {
    margin: 0 0 10px 0;
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: flex-start;
    gap: 5px;
}

.eventContent #invites ul:empty {
    display: none;
}

.eventContent #invites .email-item {
    border: 1px solid rgba(0, 0, 0, 0.3);
    border-radius: 5px;
    padding: 5px 8px;
    display: flex;
    flex-flow: row;
    gap: 5px;
    transition: background-color 100ms linear;
    user-select: none;
}

.eventContent #invites .email-item:hover {
    background-color: rgba(0, 0, 0, 0.1);
}

.eventContent #invites .delete-button {
    width: 15px;
    height: 15px;
    color: rgb(143, 23, 23);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.eventContent #invites .delete-button svg {
    width: 100%;
    height: 100%;
}

.eventContent textarea {
    width: 100%;
    min-height: 80px !important;
    background-color: transparent;
    box-shadow: none;
    padding: 5px !important;
    resize: none;
}

.eventContent .dateTimeComponentInner {
    width: 100%;
    display: flex;
    flex-flow: row;
    align-items: center;
    gap: 10px;
}

.eventContent .dateTimeComponentInner>div {
    text-align: center;
    flex: 1;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 5px;
}

.eventContent .dateTimeComponentInner>div:first-child {
    min-width: 120px;
}

.eventContent .dateTimeComponentInner .title {
    width: 100%;
    text-align: center;
    user-select: none;
}

.eventContent .dateComponent,
.eventContent .timeComponent {
    width: 100%;
    height: 40px;
    text-align: center;
}

.eventContent .buttonContainer {
    height: 40px;
    margin: 10px 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.eventContent .saveButton {
    color: #fff;
    text-transform: uppercase;
    background-color: var(--tealColor);
    border-radius: 5px;
    border: none;
    padding: 8px 10px;
    cursor: pointer;
    user-select: none;
    transition: opacity 100ms linear;
}

.eventContent .saveButton:is(:disabled, .disabled) {
    opacity: 0.5;
    pointer-events: none;
}

.eventContent .locationsResults {
    margin: 5px 0 0 0;
    position: relative;
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
}

.eventContent .locationsResults:empty {
    display: none;
}

.eventContent .locationsResults>*:is(.result, .info) {
    width: 100%;
    border: 1px solid rgba(0, 0, 0, 0.2);
    padding: 5px 8px;
    transition: background-color 100ms linear;
    cursor: pointer;
}

.eventContent .locationsResults .info {
    text-align: center;
    border-radius: 5px;
    margin-top: 5px;
}

.eventContent .locationsResults .result {
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.eventContent .locationsResults .result:first-child {
    margin-top: 5px;
}

.eventContent .locationsResults .result:only-child {
    border-radius: 5px;
}

.eventContent .locationsResults .result:not(:first-child):not(:last-child) {
    border-top: none;
}

.eventContent .locationsResults .result:first-child:not(:only-child) {
    border-radius: 5px 5px 0 0;
}

.eventContent .locationsResults .result:last-child:not(:only-child) {
    border-top: none;
    border-radius: 0 0 5px 5px;
}

.eventContent .locationsResults>*:is(.result, .info):hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.eventContent .locationsResults .icon {
    min-width: 25px;
    height: 25px;
    margin-left: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.eventContent .locationsResults .icon svg {
    width: 80%;
    height: 80%;
}

.eventContent .trackingContainer {
    position: relative;
    display: flex;
    flex-flow: row;
    user-select: none;
}

.eventContent .trackingContainer.revealed span {
    font-weight: 500;
    border: 1px solid rgba(0, 0, 0, 0.2);
    padding: 5px 10px;
    transition: background-color 100ms linear;
    cursor: pointer;
}

.eventContent .trackingContainer.revealed span:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.eventContent .trackingContainer.revealed span.active {
    background-color: rgba(0, 0, 0, 0.1);
}

.eventContent .trackingContainer.revealed span:first-child {
    border-radius: 5px 0 0 5px;
}

.eventContent .trackingContainer.revealed span:last-child {
    border-left: none;
    border-radius: 0 5px 5px 0;
}

.dateTimeComponentRenderer {
    transition: height 100ms linear;
}

.dateTimeComponentRenderer:empty {
    height: 0;
}

.dateTimeComponentRenderer:not(:empty) {
    height: 100%;
}

/* Calendar */
.day-picker-toggle {
    width: 100%;
    height: 100%;
    font-size: 14px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    padding: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.day-picker-toggle.active {
    background-color: rgba(0, 0, 0, 0.05);
}

.calendar {
    width: var(--width);
    max-width: var(--width);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    padding: 10px;
    margin: 10px 0 0 0;
    position: relative;
    --width: 310px;
    --spacing: 5px;
}

.calendar .save-container {
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    padding: 10px 0 0 0;
    margin: 10px 0 0 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.calendar:is(.monthViewRevealed, .yearViewRevealed) .save-container {
    display: none;
}

.calendar .save-container span {
    color: #fff;
    background-color: var(--tealColor);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    padding: 5px;
    margin: 5px 0;
    user-select: none;
    cursor: pointer;
    transition:
        transform 100ms linear,
        opacity 100ms linear;
}

.calendar .save-container span:active {
    transform: translate(0, 2px);
}

.calendar .save-container .confirm-button.disabled {
    opacity: 0.5;
    pointer-events: none;
}

.calendar .calendar-header,
.calendar .day-names-row,
.calendar .date-grid,
.calendar .date-week {
    display: flex;
    justify-content: space-between;
}

.calendar .day-names-row,
.calendar .date-week {
    flex-flow: row wrap;
    gap: calc(var(--spacing) / 2);
}

.calendar .calendar-header,
.calendar .day-names-row,
.calendar .date-grid {
    margin-bottom: 5px;
}

.calendar .date-grid {
    margin: var(--spacing) 0 0 0;
    flex-flow: column;
    gap: calc(var(--spacing) / 2);
}

.calendar .date-week {
    flex-flow: row;
}

.calendar .day,
.calendar .day-name {
    width: 30px;
    font-size: 12px;
    text-align: center;
    padding: 5px;
    user-select: none;
}

.calendar .day-name {
    font-weight: 600;
}

.calendar .current-view {
    display: block;
}

.calendar:is(.monthViewRevealed, .yearViewRevealed) .current-view {
    display: none;
    user-select: none;
    pointer-events: none;
}

.calendar-header {
    height: 30px;
    padding: 0 var(--spacing);
    flex-flow: row;
    align-items: center;
}

.calendar-header .month-year {
    flex: 1;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: flex-start;
}

.calendar-header .month-year>* {
    color: rgba(0, 0, 0, 1) !important;
    font-size: 18px !important;
    font-weight: 800 !important;
    cursor: pointer;
    user-select: none;
}

.calendar-header .month-year>*:hover {
    text-decoration: underline;
}

.calendar-header .month-year .year {
    margin: 0 0 0 5px;
}

.calendar-header .buttonContainer {
    width: 60px;
    min-width: 60px;
    height: 20px;
    margin: 0;
    position: relative;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
}

.calendar-header .buttonContainer>div {
    width: 20px;
    height: 20px;
    flex: 1;
    transition: opacity 100ms linear;
    transform: none;
    cursor: pointer;
}

.calendar-header .buttonContainer>div:active {
    transform: translate(0, 2px);
}

.calendar-header .buttonContainer>div.disabled {
    opacity: 0.5;
    pointer-events: none;
}

.calendar-header .buttonContainer svg {
    width: 100%;
    height: 100%;
}

.calendar .day {
    border: 1px solid transparent;
    border-radius: 5px;
    user-select: none;
    cursor: pointer;
}

.calendar .day.disabled {
    opacity: 0.2 !important;
}

.calendar .day:not(.disabled) {
    font-weight: 500;
}

.calendar .day.selected {
    border-color: rgba(0, 0, 0, 0.3);
}

.calendar .day.outside {
    opacity: 0.5;
}

.month-view,
.year-view {
    padding: calc(var(--spacing) * 2);
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: calc(var(--spacing) * 3);
    place-items: center;
}

.month-view .month,
.year-view .year {
    border: 1px solid transparent;
    border-radius: 5px;
    padding: calc(var(--spacing) * 2);
    cursor: pointer;
    transition:
        border-color 100ms linear,
        background-color 100ms linear;
}

.month-view .month:hover,
.year-view .year:hover {
    background-color: rgba(0, 0, 0, 0.1);
}

.year-view .year {
    font-size: 14px !important;
}

.month-view .month.current,
.year-view .year.current {
    border-color: rgba(0, 0, 0, 0.3);
}

.month-view .month.selected,
.year-view .year.selected {
    font-weight: 600;
}

.month-view .month.disabled,
.year-view .year.disabled {
    opacity: 0.5;
    pointer-events: none;
}

.day-picker-toggle,
.time-picker-button {
    user-select: none;
}

/* Time Picker */
.time-picker-button {
    width: 100%;
    height: 40px;
    font-size: 14px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    padding: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.time-picker-button.active {
    background-color: rgba(0, 0, 0, 0.05);
}

.time-picker-container {
    width: 310px;
    height: 200px;
    padding: 20px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    margin: 10px 0 0 0;
    display: flex;
    flex-flow: column;
    gap: 10px;
    overflow-y: auto;
}

.time-picker-container .time-picker-hour-container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    place-items: center;
    gap: 10px;
}

.time-picker-container .time-picker-option {
    width: 100px;
    height: 30px;
    font-size: 12px;
    border: 1px solid rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    padding: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
    cursor: pointer;
    transition: background-color 100ms linear;
}

.time-picker-container .time-picker-option:hover {
    background-color: rgba(0, 0, 0, 0.1);
}

.time-picker-container .time-picker-option.disabled {
    opacity: 0.5;
    pointer-events: none;
}

/* Account Settings Popup */
.account-popup {
    width: 120px;
    height: 80px;
    background-color: #fff;
    border: 1px solid rgba(0, 0, 0, 0.4);
    border-radius: 5px;
    position: fixed;
    inset: calc(var(--headerHeight) + 10px) 15px auto auto;
    z-index: 999;
    animation: accountPopup 250ms linear forwards;
}

.account-popup-inner {
    width: 100%;
    height: 100%;
}

@keyframes accountPopup {
    from {
        opacity: 0;
        transform: translate(0, 10px);
    }

    to {
        opacity: 1;
        transform: none;
    }
}

.leaflet-marker-icon.leaflet-interactive {
    pointer-events: none !important;
}

/* start css for landing.js below */
#formsContainer {
    margin-top: 100px;
    text-align: center;
}

.form {
    background-color: rgba(255, 255, 255, 0.8);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 300px;
    text-align: center;
    margin-bottom: 10px;
    /* Separate forms visually when both are visible */
}

input[type="text"],
input[type="password"],
input[type="email"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

button {
    width: 100%;
    padding: 10px;
    background-color: #0275d8;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.sign-up-button {
	width: 150px;
	margin-left: 1100px;
    background-color: #058484;
}

.landingUser {
    margin-right: 30px;
}

.event-form input,
.event-form button {
    width: auto;
    /* Adjust width as needed, or remove the width property to allow natural sizing */
}

.centered-container {
    position: relative;
    width: 100%;
    height: 100vh; 
}

.event-form{
	display: flex;
	justify-content: space-between;
	align-items: center;
	position: absolute;
	background-color: rgb(0,132,132);
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	width: 100%;
	max-width: 900px;
	padding: 20px;
	border-radius: 5px;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
	
}

.event-form input,
.event-form button {
    padding: 10px;
    /* Add more padding inside the fields and button */
    margin: 0;
    /* Adjust margin as needed */
    border: 1px solid #ddd;
    font-size: 1rem;
}

.event-form input[type='date'] {
    border-radius: 5px;
    /* Adjust the pixel value to get the desired roundness */
    color: #979393;
}

.event-form button {
    background: rgb(255, 255, 255);
    border: none;
    color: #979393;
    /* Bootstrap's default link color */
    text-decoration: underline;
    text-align: left;
    /* Align text to the left */
}


.event-form {
    display: grid;
    /* Use grid layout for better control */
    grid-template-columns: repeat(4, 1fr) auto;
    /* 4 equal columns for inputs, auto for button */
    gap: 5px;
    /* Adjust the gap between grid items */
}

.event-form input,
.event-form button {
    grid-column: span 1;
    /* Each input and button spans one column */
}


button:hover {
    background-color: rgb(248, 246, 246);
}

#formsContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#formsContainer span {
    color: #0275d8;
    cursor: pointer;
}

#formsContainer span:hover {
    text-decoration: underline;
}

/* end css for landing.js below */